{
  "name": "robust-in-sphere",
  "version": "0.0.1",
  "description": "Exact arithmetic test to check if point is contained in sphere",
  "main": "in-sphere.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "robust-scale": "~0.0.3",
    "robust-sum": "~0.0.2",
    "two-product": "~0.0.0",
    "robust-subtract": "0.0.0"
  },
  "devDependencies": {
    "tape": "~2.0.0",
    "tap": "~0.4.4"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/robust-in-sphere.git"
  },
  "keywords": [
    "sphere",
    "robust",
    "geometric",
    "predicate",
    "exact",
    "geometry"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/robust-in-sphere/issues"
  },
  "readme": "robust-in-sphere\n================\nExact arithmetic test to check if (n+2) points are cospherical.\n\n## Example\n\n```javascript\nvar inSphere = require(\"robust-in-sphere\")\n\nvar points = [\n  [0, 1],\n  [1, 0],\n  [-1, 0],\n  [0, -1]\n]\n\nconsole.log(inSphere(points))\n```\n\n### `require(\"robust-in-sphere\")(points)`\nTests if a collection of `n+2` points in `n`-dimensional space are cospherical or if the last point is contained in the sphere or not.\n\n* `points` is a list of points\n\n**Returns** A signed integer that gives the orientation of the points\n* `+1` if the last point is contained in the oriented sphere defined by the previous two points\n* `-1` if the last point is outside the sphere\n* `0` is the points are cospherical\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "robust-in-sphere@0.0.1",
  "dist": {
    "shasum": "8d0697084a37d2d3de3298a087e83d740dd6fbe0"
  },
  "_from": "robust-in-sphere@~0.0.1",
  "_resolved": "https://registry.npmjs.org/robust-in-sphere/-/robust-in-sphere-0.0.1.tgz"
}
