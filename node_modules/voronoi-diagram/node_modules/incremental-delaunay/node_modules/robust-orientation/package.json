{
  "name": "robust-orientation",
  "version": "0.0.0",
  "description": "Exactly computes the orientation of a tuple of points",
  "main": "orientation.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "robust-scale": "~0.0.3",
    "robust-sum": "~0.0.2",
    "two-product": "~0.0.0"
  },
  "devDependencies": {
    "tape": "~2.0.0",
    "tap": "~0.4.4"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/robust-orientation.git"
  },
  "keywords": [
    "robust",
    "orientation",
    "point",
    "predicate",
    "geometry"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/robust-orientation/issues"
  },
  "readme": "robust-orientation\n==================\nRobust orientation test for n-simplices\n\n## Example\n\n```javascript\nvar orientation = require(\"robust-orientation\")\n\nvar triangle = [[0, 0], [1e-64, 0], [0, 1]]\nconsole.log(orientation(triangle))\n```\n\n### `require(\"robust-orientation\")(simplex)`\nExactly computes the orientation of a collection of (n+1) points in n-dimensions.\n\n* `points` is an array of `(n+1)` arrays, each array having length `n`\n\n**Returns** The orientation of the point set:\n* `+1` if the tuple of points is positively oriented\n* `-1` if the tuple of points is negatively oriented\n* `0` if the points are coplanar\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "robust-orientation@0.0.0",
  "dist": {
    "shasum": "d9769aa5b1b35b0722969b4f1eee4a6002af1c1d"
  },
  "_from": "robust-orientation@~0.0.0",
  "_resolved": "https://registry.npmjs.org/robust-orientation/-/robust-orientation-0.0.0.tgz"
}
